{"remainingRequest":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Edgar\\Documents\\examen\\exafed\\src\\views\\Crud.vue?vue&type=template&id=27729f78&scoped=true&","dependencies":[{"path":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\src\\views\\Crud.vue","mtime":1598414105881},{"path":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}