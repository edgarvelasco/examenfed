{"remainingRequest":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Edgar\\Documents\\examen\\exafed\\src\\views\\Create.vue?vue&type=template&id=6ee6d5b6&","dependencies":[{"path":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\src\\views\\Create.vue","mtime":1598063673891},{"path":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Edgar\\Documents\\examen\\exafed\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}